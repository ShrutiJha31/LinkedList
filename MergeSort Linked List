
class Solution{
  public:
    //Function to sort the given linked list using Merge Sort.
 
    
    
    
    Node* mergeSort(Node* head) {
        
        if(head->next==NULL)
        return head;
        Node* mid=findmid(head);
        Node* first=head;
        Node* second=mid->next;
        mid->next=NULL;
        first=mergeSort(first);
        second=mergeSort(second);
        return merge(first,second);
    }
    
    Node* findmid(Node* head)
    {
        Node* slow=head;
        Node* fast=head->next;
        while(fast!=NULL&&fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
        
    }
       Node* merge(Node* first,Node* second)
    {
          Node* merged = new Node(100);
        Node* temp = merged;
        
        while(first!=NULL&&second!=NULL)
        {
            if(first->data<second->data)
            {
                temp->next=first;
                first=first->next;
                
            }
            else
            {
                 temp->next=second;
                second=second->next;
                
            }
            temp=temp->next;
        }
        while(first!=NULL)
        {
            temp->next=first;
            first=first->next;
            temp=temp->next;
        }
        while(second!=NULL)
        {
             temp->next=second;
            second=second->next;
            temp=temp->next;
        }
        return merged->next;
    }
};
